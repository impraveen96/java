/*
Govind is playing with strings.
He is given two strings S1 and S2, He has to find if each character in S1 can match a word in S2 uniquely or not.

A match that is both one-to-one (an injection) and onto (a surjection), 
i.e. a function which relates each letter in string S1 to a separate and distinct non-empty word in S2, 
where each non-empty word in S2 also has a corresponding letter in S1.

Return true, if S1 can match S2 completely.
Otherwise false.

Note: You may assume S1 and S2 contains only lowercase letters, S2 contains whitespace also.

Input Format:
-------------
Line-1 -> A string S1, single word
Line-2 -> A string S2, group of space separated words.

Output Format:
--------------
Print a boolean value.


Sample Input-1:
---------------
baba
cat rat cat rat

Sample Output-1:
----------------
true

Sample Input-2:
---------------
baba
cat rat rat cat

Sample Output-2:
----------------
false


=== testcases ===
case =1
input =baba
rat cat rat cat
output =true

case =2
input =baba
rat cat cat rat
output =false

case =3
input =ammamma
amaze maze maze amaze maze maze amaze
output =true

case =4
input =institute
rock scissor paper cut rock cut nice cut stop 
output =true

case =5
input =institute
rock scissor paper cut rock cut paper cut scissor
output =false

case =6
input =vividdivid
tic toc tic toc toe toe toc tic toc toe
output =true

case =7
input =redivider
tic toc tik tok toe toc tic tok tik
output =false

case =8
input =mississippi
mango island sapota sapota island sapota sapota island mango mango island
output =false


*/
import java.util.*;
class MatchtheStrings {
	public boolean matchStrings(String S1, String S2) {
		String[] words = S2.split(" ");
		if (words.length != S1.length())
			return false;
		Map index = new HashMap();
		for (Integer i=0; i<words.length; ++i)
			if (index.put(S1.charAt(i), i) != index.put(words[i], i))
				return false;
		return true;
	}

	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		String S1=sc.nextLine();
		String S2=sc.nextLine();
		System.out.println(new MatchtheStrings().matchStrings(S1,S2));
	}
}