/*
A street seller selling Ganesh idols made of three distinct materials: 
Turmeric Ganesha, Clay Ganesha, and PoP Ganesha (Plaster of Paris). 
Each ganesha is identifiable by a code: 0 = Turmeric, 1 = Clay, 2 = PoP.

The seller has received the idols in a line. He must organise the idols
such that all of the idols made of the same material are put together as a group.

Your task is to help the seller, to arrange the idols in the following order,
Group-1: Turmeric Ganesha, Group-2: Clay Ganesha, Group-3: PoP Ganesha 


INPUT FORMAT:
-------------
Line-1: An integer N, number of idols.
Line-2: N comma separated integers, Initial arrangement of Idols.

OUTPUT FORMAT:
--------------
Print the grouped order of Idols.


SAMPLE INPUT-1:
---------------
6
0,2,1,1,2,0

SAMPLE OUTPUT-1:
----------------
[0, 0, 1, 1, 2, 2]


SAMPLE INPUT-2:
---------------
8
0,1,2,1,2,1,2,0

SAMPLE OUTPUT-2:
----------------
[0, 0, 1, 1, 1, 2, 2, 2]



=== testcases ===
case =1
input =20
1,1,0,0,2,2,1,2,2,0,0,0,0,2,0,1,1,0,0,0
output =[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,2]

case =2
input =30
2,2,2,2,0,2,1,1,2,0,2,0,1,0,0,0,1,2,2,0,0,1,1,1,2,2,0,0,1,2
output =[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2]

case =3
input =50
2,2,2,0,0,0,1,1,2,2,0,0,0,2,0,2,1,0,0,1,0,1,1,1,0,0,1,2,1,2,1,0,0,0,1,1,2,2,1,0,2,0,0,0,0,0,0,2,1,0
output =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2]

case =4
input =100
0,1,2,2,2,1,1,0,2,2,1,0,0,1,2,0,2,1,1,1,1,2,2,2,0,0,0,2,2,1,1,2,2,1,0,0,1,2,1,2,2,1,0,2,1,0,2,2,1,1,0,0,2,0,0,0,2,0,1,2,1,2,1,2,1,1,0,1,2,0,0,0,0,1,0,0,1,2,2,2,0,0,1,2,2,2,0,0,2,0,0,2,1,2,1,1,1,0,1,0
output =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]

case =5
input =150
0,2,1,2,2,2,2,0,1,2,0,1,2,2,2,1,0,1,0,1,2,1,1,1,2,0,1,2,0,0,1,1,1,0,2,1,1,2,0,0,2,0,0,1,1,2,2,0,2,0,2,1,1,0,0,0,1,1,2,1,1,0,1,0,2,1,0,0,2,0,2,0,1,0,0,1,0,0,1,0,1,2,0,2,2,2,1,2,1,2,2,2,2,2,0,1,1,0,0,0,1,1,2,0,2,1,1,2,1,2,2,0,1,2,0,2,2,2,1,2,2,0,1,1,0,0,1,2,0,2,1,1,2,0,0,2,0,2,2,0,0,0,2,2,0,0,0,0,0,0
output =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]

case =6
input =200
1,0,0,1,1,1,2,2,2,2,2,2,0,2,1,2,1,0,1,0,2,1,0,2,0,0,1,0,0,1,0,0,2,1,1,1,1,0,2,0,2,2,2,1,0,1,1,0,0,0,1,1,2,0,0,1,1,1,2,1,0,1,0,2,2,1,2,1,0,0,2,2,0,0,0,0,2,0,1,2,0,0,2,0,0,1,2,1,0,1,0,0,2,2,2,0,0,1,0,2,2,1,2,1,2,2,1,2,2,2,2,2,2,1,0,2,2,2,1,0,2,1,0,2,0,1,0,0,0,1,0,2,2,0,1,1,1,2,0,1,1,0,0,1,1,1,1,2,2,1,2,0,0,0,2,2,2,2,2,1,1,0,2,0,0,1,0,2,1,2,1,2,2,1,2,2,1,0,1,0,0,2,0,0,1,2,1,2,0,0,2,1,0,2,0,2,0,0,1,1
output =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]

case =7
input =250
0,2,0,2,1,2,2,0,1,1,2,2,1,2,1,2,1,2,1,0,0,2,2,1,1,0,2,0,0,1,1,2,0,2,1,1,1,1,2,2,2,2,1,1,1,1,2,1,1,0,0,1,1,2,0,0,1,2,2,2,0,0,2,2,1,1,1,0,0,2,0,2,0,1,2,2,2,1,0,2,0,2,0,0,1,2,0,2,2,0,0,2,2,1,1,1,0,0,1,0,1,1,0,0,0,1,1,0,0,2,2,1,2,0,2,2,2,0,0,0,2,2,2,1,1,2,2,1,1,2,2,2,0,1,1,2,2,2,2,0,2,1,1,2,2,1,2,0,2,2,2,1,2,1,2,2,0,1,0,1,0,2,2,0,0,1,1,1,1,0,1,2,0,2,0,0,2,2,2,2,0,2,2,0,2,1,1,0,1,2,1,2,1,1,1,2,2,2,2,1,0,1,0,1,1,2,2,2,2,0,1,0,1,2,1,1,2,2,1,2,1,0,1,2,0,2,0,2,1,1,1,0,2,0,2,1,2,1,0,1,0,0,2,2,2,2,2,1,0,0
output =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]

case =8
input =300
0,1,2,2,1,0,2,0,2,0,2,2,2,0,0,0,2,1,0,2,0,2,0,0,0,1,2,2,2,2,0,2,1,2,1,1,2,2,1,0,1,1,1,2,2,2,1,0,1,1,1,2,1,2,1,1,0,2,1,2,0,2,1,0,1,2,0,1,2,1,1,0,1,0,2,0,1,1,1,1,2,0,1,1,2,2,1,2,0,0,0,0,1,0,1,0,1,2,1,0,0,1,1,0,2,0,1,2,2,1,1,0,2,0,1,0,1,1,2,1,2,0,0,1,0,2,1,2,1,0,2,2,2,1,2,0,0,1,2,2,2,0,2,0,2,0,0,2,2,2,2,0,2,0,2,2,1,2,1,1,2,0,2,2,0,1,1,1,1,0,0,1,2,0,2,2,0,2,1,0,2,0,2,2,1,2,2,1,0,2,0,2,0,0,0,1,2,1,2,1,2,2,0,2,0,0,1,2,2,1,2,2,1,2,2,2,2,1,1,2,0,2,0,2,0,1,0,1,1,1,0,2,1,2,0,1,0,1,2,0,1,0,0,2,2,1,0,0,1,0,0,0,2,2,0,2,0,1,0,1,1,0,0,0,0,2,1,1,2,0,0,1,2,0,0,2,1,1,2,2,0,0,0,1,1,1,0,2,1,2,1,1,0,0,0,1,0,0,1,0
output =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]


*/
import java.util.*;

class Solution {
  /*
  Dutch National Flag problem solution.
  */
  public void sortColors(int[] nums) {
    // for all idx < i : nums[idx < i] = 0
    // j is an index of element under consideration
    int p0 = 0, curr = 0;
    // for all idx > k : nums[idx > k] = 2
    int p2 = nums.length - 1;

    int tmp;
    while (curr <= p2) {
      if (nums[curr] == 0) {
        // swap p0-th and curr-th elements
        // i++ and j++
        tmp = nums[p0];
        nums[p0++] = nums[curr];
        nums[curr++] = tmp;
      }
      else if (nums[curr] == 2) {
        // swap k-th and curr-th elements
        // p2--
        tmp = nums[curr];
        nums[curr] = nums[p2];
        nums[p2--] = tmp;
      }
      else curr++;
    }
  }
  
  public static void main(String args[]){
      Scanner sc=new Scanner(System.in);
      int n=sc.nextInt();
      sc.nextLine();
      int arr[]=new int[n];
      String s[]=sc.nextLine().split(",");
      for(int i=0;i<n;i++)
        arr[i]=Integer.parseInt(s[i]);
    new Solution().sortColors(arr);
    System.out.println(Arrays.toString(arr));
    
  }
}