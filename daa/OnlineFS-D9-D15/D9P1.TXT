/*
Padmavathi's lucky number is 3.
She works as an accountant in a company.
She likes to know the third highest salary among all the employees.

She is given an array of salaries salary[].
Your task is to help Padmavathi to find the third highest salary (distinct).

NOTE: Salary is in lakhs per annum.

Input Format:
-------------
Line-1: An integer N, number of employees
Line-2: N space separated integers 

Output Format:
--------------
Print an integer, third highest salary.


Sample Input-1:
---------------
5
3 5 2 7 6

Sample Output-1:
----------------
5


Sample Input-2:
---------------
5
5 5 4 7 7

Sample Output-2:
----------------
4


=== testcases ===
case =1
input =10
24 13 19 10 10 28 4 5 24 21
output =21

case =2
input =15
20 4 12 7 15 2 8 13 7 17 12 15 16 12 10
output =16

case =3
input =5
3 5 2 7 6
output =5

case =4
input =5
5 5 4 7 7
output =4

case =5
input =15
16 20 11 18 12 18 11 20 10 4 19 7 1 15 16
output =18

case =6
input =20
9 15 2 5 6 11 2 9 15 10 6 13 12 13 2 15 15 8 5 3
output =12

case =7
input =40
13 12 14 22 26 25 16 12 13 18 2 10 17 9 24 30 18 11 24 30 9 29 27 24 13 6 18 17 16 25 17 6 10 28 16 12 23 11 7 14
output =28

case =8
input =50
2 5 6 20 17 10 11 11 5 12 8 19 18 10 15 4 21 1 4 21 20 12 19 8 1 20 16 11 4 5 24 5 14 18 25 2 12 5 16 7 11 23 5 11 4 20 5 19 7 5
output =23

*/
import java.util.*;

class ThirdMax{
    public int thirdMax(int[] nums) {
        Integer max1 = null;
        Integer max2 = null;
        Integer max3 = null;
        for (Integer n : nums) {
            if (n.equals(max1) || n.equals(max2) || n.equals(max3)) continue;
            if (max1 == null || n > max1) {
                max3 = max2;
                max2 = max1;
                max1 = n;
            } else if (max2 == null || n > max2) {
                max3 = max2;
                max2 = n;
            } else if (max3 == null || n > max3) {
                max3 = n;
            }
        }
        return max3 == null ? max1 : max3;
    }
	
	//SOLUTION USING SET 
	/*public int thirdMax(int[] nums) {
		// Put the input integers into a HashSet.
		Set<Integer> setNums = new HashSet<>();
		for (int num : nums) setNums.add(num);

		// Find the maximum.
		int maximum = Collections.max(setNums);

		// Check whether or not this is a case where we
		// need to return the *maximum*.
		if (setNums.size() < 3) {
			return maximum;
		}

		// Otherwise, continue on to finding the third maximum.
		setNums.remove(maximum);
		int secondMaximum = Collections.max(setNums);
		setNums.remove(secondMaximum);
		return Collections.max(setNums);
	}
	*/
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int num[]=new int[n];
		for(int i=0;i<n;i++){
			num[i]=sc.nextInt();
		}
		
		System.out.println(new ThirdMax().thirdMax(num));
	}
}